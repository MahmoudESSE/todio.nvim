*todio.nvim.txt*        For Neovim >= 0.9.0       Last change: 2024 January 25

==============================================================================
Table of Contents                               *todio.nvim-table-of-contents*

1. todio.nvim                                          |todio.nvim-todio.nvim|
  - Features                                  |todio.nvim-todio.nvim-features|
  - Requirements                          |todio.nvim-todio.nvim-requirements|
  - Installation                          |todio.nvim-todio.nvim-installation|
  - Usage                                        |todio.nvim-todio.nvim-usage|
  - Command                                    |todio.nvim-todio.nvim-command|
  - API                                            |todio.nvim-todio.nvim-api|
  - Todo                                          |todio.nvim-todio.nvim-todo|
  - Example                                    |todio.nvim-todio.nvim-example|

==============================================================================
1. todio.nvim                                          *todio.nvim-todio.nvim*

`todio.nvim` a neovim plugin to help keep track of your todos.


FEATURES                                      *todio.nvim-todio.nvim-features*

- Parse todos from file
- List todos in a quick fix list


REQUIREMENTS                              *todio.nvim-todio.nvim-requirements*

- Neovim-0.9+ <https://github.com/neovim/neovim>
- nui.nvim <https://github.com/MunifTanjim/nui.nvim>
- nvim-treesitter <https://github.com/nvim-treesitter/nvim-treesitter>


INSTALLATION                              *todio.nvim-todio.nvim-installation*

You can install `todio.nvim` using your favorite plugin manager

- lazy.nvim <https://github.com/folke/lazy.nvim>

>lua
    {
        "MahmoudESSE/todio.nvim",
        ---@type TodioConfig
        opts = {},
        config = function(opts)
            require("todio").setup(opts)
        end,
        dependencies = {
           "MunifTanjim/nui.nvim",
        },
    }
<


USAGE                                            *todio.nvim-todio.nvim-usage*

- list your todos

>lua
    require("todio").todos()
<


COMMAND                                        *todio.nvim-todio.nvim-command*

TodioHelp


API                                                *todio.nvim-todio.nvim-api*

get parsed todos

>lua
    require("todio.utils").get_todos()
<


TODO                                              *todio.nvim-todio.nvim-todo*

- add support for multiple languages
    - lua
    - c
    - cpp
    - rust
    - python
    - js
    - ts
- open todo list in quick fix list
- open todo list in location list
- open todo list in float buffer


EXAMPLE                                        *todio.nvim-todio.nvim-example*


C ~

>c
    /// TODO: test for division by 0
    /// BUG: change int to correct type
    int div(int x, int y) {
        return x / y;
    }
<


LUA ~

>lua
    -- TODO: test for division by 0
    -- BUG: could throw divided by zero err
    local function div(lhs, rhs)
        return lhs / rhs
    end
<

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
